version: "3.9"

services:
    db:
        image: postgres:15-alpine
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
            POSTGRES_DB: ${POSTGRES_DB:-budget}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-budget}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    backend:
        build: ./backend
        restart: unless-stopped
        env_file:
            - ./.env
        environment:
            DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://postgres:postgres@db:5432/budget}
            API_PREFIX: ${API_PREFIX:-/api}
            ALLOW_ORIGINS: ${ALLOW_ORIGINS:-*}
            JWT_SECRET: ${JWT_SECRET:-change-me}
            JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-1440}
            DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
            OPENAI_API_KEY: ${OPENAI_API_KEY:-}
            AI_MODEL: ${AI_MODEL:-gpt-4o-mini}
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "8000:8000"

    telegram-bot:
        build: ./backend
        restart: unless-stopped
        command: ["python", "-m", "app.telegram_bot"]
        env_file:
            - ./.env
        environment:
            DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://postgres:postgres@db:5432/budget}
            API_PREFIX: ${API_PREFIX:-/api}
            JWT_SECRET: ${JWT_SECRET:-change-me}
            JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-1440}
            DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
            TELEGRAM_BOT: ${TELEGRAM_BOT}
            OPENAI_API_KEY: ${OPENAI_API_KEY:-}
            AI_MODEL: ${AI_MODEL:-gpt-4o-mini}
        depends_on:
            db:
                condition: service_healthy

volumes:
    postgres_data:
